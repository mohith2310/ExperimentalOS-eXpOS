loadi(63,13);
loadi(64,14);

loadi(65,7); //init program from disk 7 and 8
loadi(66,8);

loadi(83,69); //even program 

loadi(89,70); //prime program

loadi(22,35); //INT10 module from disk to memory
loadi(23,36);

loadi(2, 15); // Exception Handler Routine 
loadi(3, 16);

loadi(4, 17); //timer interrupt routine
loadi(5, 18);

loadi(16,29); //INT7 routine 
loadi(17,30);

loadi(50,63);  // Module 5 Scheduler
loadi(51,64);

loadi(40,53); // Module 0 Device Manager
loadi(41,54);

loadi(48,61); // Module 4 Resource Manager
loadi(49,62);


PTBR = PAGE_TABLE_BASE + 20;

[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

PTBR = PAGE_TABLE_BASE + 40;

[PTBR+0] = 63;             // even program page table
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 84;
[PTBR+5] = "0110";
[PTBR+6] = 85;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 83;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 86;
[PTBR+17] = "0110";
[PTBR+18] = 87;
[PTBR+19] = "0110";

PTBR = PAGE_TABLE_BASE + 60;

[PTBR+0] = 63;             // even program page table
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 90;
[PTBR+5] = "0110";
[PTBR+6] = 91;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 89;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 92;
[PTBR+17] = "0110";
[PTBR+18] = 93;
[PTBR+19] = "0110";




[PROCESS_TABLE +16 + 11] = 80;     // init program
[PROCESS_TABLE + 16 + 1] = 1;
[PROCESS_TABLE + 16 + 4] = CREATED;
[PROCESS_TABLE + 16 + 13] = 8*512;
[PROCESS_TABLE + 16 + 12] = 0;
[PROCESS_TABLE + 16 + 14] = PAGE_TABLE_BASE + 20;
[PROCESS_TABLE + 16 + 15] = 10;
[PROCESS_TABLE + 16] = 0;


[PROCESS_TABLE +32 + 11] = 88;     // even program
[PROCESS_TABLE + 32 + 1] = 2;
[PROCESS_TABLE + 32 + 4] = CREATED;
[PROCESS_TABLE + 32 + 13] = 8*512;
[PROCESS_TABLE + 32 + 12] = 0;
[PROCESS_TABLE + 32 + 14] = PAGE_TABLE_BASE + 40;
[PROCESS_TABLE + 32 + 15] = 10;
[PROCESS_TABLE +32] = 0;

[PROCESS_TABLE +48 + 11] = 94;     // prime program
[PROCESS_TABLE + 48 + 1] = 3;
[PROCESS_TABLE + 48 + 4] = CREATED;
[PROCESS_TABLE + 48 + 13] = 8*512;
[PROCESS_TABLE + 48 + 12] = 0;
[PROCESS_TABLE + 48 + 14] = PAGE_TABLE_BASE + 60;
[PROCESS_TABLE + 48 + 15] = 10;
[PROCESS_TABLE + 48] = 0;

[TERMINAL_STATUS_TABLE] = 0;

alias counter R4;
counter = 4;
while(counter<=15) do
	[PROCESS_TABLE + counter*16 + 4] = TERMINATED;
	counter = counter + 1;
endwhile;

[76*512] = [65*512 + 1]; // init program
counter = [65*512 + 1];
[86*512] = [83*512 + 1];   // even program

[92*512] = [89*512 +1]; //prime program

PTBR = PAGE_TABLE_BASE;



return;
