//-----------------------SHUT DOWN SYS CALL------------//
//number of kernel mode switch
[70*512 + 511] = [70*512+511] + 1;

[PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE+1] + 9] = 15;

alias userSP R0;
userSP = SP;
[PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE+1] + 13] = SP;
SP = [PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE+1]+11]*512-1;

//if current process is not shell or current user is not a root user
if( ([PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE + 1] + 1] != 1) || ([PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE + 1] + 3] != 1)) then
  [ ([PTBR + 2*(userSP-1)/512]*512) + (userSP-1)%512] = -1;
  [PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE+1]+9] = 0;
  SP = [PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE+1] + 13];
  ireturn;
endif;

//......................commit mem copies in disk

//store inode table
R1 = DISK_STORE;
R2 = [SYSTEM_STATUS_TABLE+1];
R3 = 59;    //page_num
R4 = 3;     //block num
call MOD_4; //DEVICE MANAGER MODULE

R1 = DISK_STORE;
R2 = [SYSTEM_STATUS_TABLE+1];
R3 = 60;    //page_num
R4 = 4;     //block num
call MOD_4; //DEVICE MANAGER MODULE

//store df
R1 = DISK_STORE;
R2 = [SYSTEM_STATUS_TABLE+1];
R3 = 61;    //page_num
R4 = 2;     //block num
call MOD_4; //DEVICE MANAGER MODULE

//store root file
R1 = DISK_STORE;
R2 = [SYSTEM_STATUS_TABLE+1];
R3 = 62;    //page_num
R4 = 5;     //block num
call MOD_4; //DEVICE MANAGER MODULE

halt;
