 //------------------------EXCEPTION HANDLER---------------//

[PROCESS_TABLE + (16*[SYSTEM_STATUS_TABLE+1]) + 9] = -1;

[PROCESS_TABLE + (16*[SYSTEM_STATUS_TABLE+1]) + 13] = SP;
SP = [PROCESS_TABLE + (16 * [SYSTEM_STATUS_TABLE + 1])]*512 -1;
breakpoint;
backup;

multipush(EIP);

if( (EC == 1) || (EC == 2) || (EC == 3))	then
	
	if(EC == 1)	then
		print "Ilgl Instr";
	endif;

	if(EC == 2)	then
		print "Ilgl Mem Acs";
	endif;

	if(EC == 3)	then
		print "Arth Exp";
	endif;

	backup;
	R1 = EXIT_PROCESS;
	R2 = [SYSTEM_STATUS_TABLE + 1];

	call MOD_1;			//PROCESS MANAGER MODULE

	restore;

	call MOD_5;			//SCHEDULER

endif;

if(EC == 0)	then

	if((EPN == 4) || (EPN == 5) || (EPN == 6) || (EPN == 7) )	then

		backup; 

		R1 = GET_CODE_PAGE;
		R2 = [SYSTEM_STATUS_TABLE + 1];
		R3 = [DISK_MAP_TABLE + 10*[SYSTEM_STATUS_TABLE] + EPN];

		call MOD_2;		//MEMORY MANAGER MODULE

		[PAGE_TABLE_BASE + 20*[SYSTEM_STATUS_TABLE+1] + 2*EPN] = R0;
		[PAGE_TABLE_BASE + 20*[SYSTEM_STATUS_TABLE+1] + 2*EPN + 2] = "1100";

		restore;
	endif;

	if((EPN == 2) || (EPN==3))	then

		backup;

		R1 = GET_FREE_PAGE;
		call MOD_2;		//MEMORY MANAGER MODULE

		[PAGE_TABLE_BASE + 20*[SYSTEM_STATUS_TABLE+1] + 2*EPN] = R0;
		[PAGE_TABLE_BASE + 20*[SYSTEM_STATUS_TABLE+1] + 2*EPN + 1] = "1110";

		restore;
	endif;
endif;

[PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE+1] + 9] = 0;

multipop(EIP);
restore;

SP = [PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE+1] + 13];
SP = SP + 1;

[[PTBR + 2*(SP/512)]*512 + (SP%512)] = EIP;

ireturn;