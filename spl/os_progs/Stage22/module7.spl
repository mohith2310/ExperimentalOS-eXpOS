//Exception handler
loadi(2,15);
loadi(3,16);

//TIMER_INT
loadi(4,17);
loadi(5,18);

//DISK_INT
loadi(6,19);
loadi(7,20);

//CONSOLE_INT
loadi(8,21);
loadi(9,22);

//INT6
loadi(14,27);
loadi(15,28);

//INT 7
loadi(16,29);
loadi(17,30);

//INT 8
loadi(18,31);
loadi(19,32);

//INT 9
loadi(20, 33);
loadi(21, 34);

//INT 10
loadi(22, 35);
loadi(23, 36);

//INT 11
loadi(24, 37);
loadi(25, 38);

//INT 13
loadi(28, 41);
loadi(29, 42);

//INT 14
loadi(30, 43);
loadi(31, 44);

//INT 15
loadi(32,45);
loadi(33,46);

//MOD 0
loadi(40,53);
loadi(41,54);

//MOD 1
loadi(42,55);
loadi(43,56);

//MOD 2
loadi(44,57);
loadi(45,58);

//MOD 4
loadi(48,61);
loadi(49,62);

//MOD_5
loadi(50,63);
loadi(51,64);

//INODE TABLE
loadi(59,3);
loadi(60,4);

//DISK FREE LIST
loadi(61,2);

//LIBRARY
loadi(63,13);
loadi(64,14);

//INIT
loadi(65,7);
loadi(66,8);

//SHELL
loadi(67,9);
loadi(68,10);

alias i R2;
i=0;

while(i <= 82)	do
	[MEMORY_FREE_LIST+i] = 1;
	i = i+1;
endwhile;

while(i<=127)	do
	[MEMORY_FREE_LIST+i] = 0;
	i = i + 1;
endwhile;

i = 0;
while(i<8) do
		[[PROCESS_TABLE +16 + 11]*512 + 512 -16 + 2*i] = -1;
		i = i + 1;
endwhile;

i= 0;
while(i < 32)	do
	[SEMAPHORE_TABLE + i*4 + 0] = -1;
	[SEMAPHORE_TABLE + i*4 + 1] = 0;
	i = i+1;
endwhile;

[TERMINAL_STATUS_TABLE + 0] = 0;

[SYSTEM_STATUS_TABLE+3] = 0;		//wait mem cnt

[SYSTEM_STATUS_TABLE+2] = 45;		//free mem cnt

[DISK_STATUS_TABLE] = 0;

i=0;
while(i < 10)	do
	[DISK_MAP_TABLE + 10 + i] = -1;
	i = i+1;
endwhile;

[DISK_MAP_TABLE + 10 + 4] = 7;
[DISK_MAP_TABLE + 10 + 5] = 8;

//init process 1
PTBR = PAGE_TABLE_BASE+20;
PTLR = 10;

//library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

[76*512] = [65*512+1];

//process table
[PROCESS_TABLE+16+0] = 0;
[PROCESS_TABLE+16+1] = 1;
[PROCESS_TABLE+16+4] = CREATED;
[PROCESS_TABLE+16+11] = 80;
[PROCESS_TABLE+16+12] = 0;
[PROCESS_TABLE+16+13] = 8*512;
[PROCESS_TABLE+16+14] = PTBR;
[PROCESS_TABLE+16+15] = PTLR;


alias resourceTable R7;
resourceTable = 80*512 + RESOURCE_TABLE_OFFSET;
[resourceTable + 2*0] = -1;
[resourceTable + 2*1] = -1;
[resourceTable + 2*2] = -1;
[resourceTable + 2*3] = -1;
[resourceTable + 2*4] = -1;
[resourceTable + 2*5] = -1;
[resourceTable + 2*6] = -1;
[resourceTable + 2*7] = -1;

alias diskMap R8;
diskMap = DISK_MAP_TABLE + 10;

[diskMap + 0] = -1;
[diskMap + 1] = -1;
[diskMap + 2] = -1;
[diskMap + 3] = -1;
[diskMap + 4] = 64;
[diskMap + 5] = 65;
[diskMap + 6] = -1;
[diskMap + 7] = -1;
[diskMap + 8] = -1;
[diskMap + 9] = -1;

i = 2;
while(i < 16)	do
	[PROCESS_TABLE+16*i+4] = TERMINATED;
	i = i+1;
endwhile;

PTBR = PAGE_TABLE_BASE;

//counts
[70*512 + 508] = 0;	//Disk Access
[70*512 + 509] = 0;	//Context Switches
[70*512 + 510] = (128-45);	//Max memory usage
[70*512 + 511] = 0;	//Switch to kernel mode

return;
